{"ast":null,"code":"var _jsxFileName = \"/Users/stevenvisser/code/stevenvssr/Projects/coding-challange/src/App.js\";\nimport React, { useEffect, useReducer } from \"react\";\nimport \"./App.css\";\nimport \"video-react/dist/video-react.css\";\nimport initialState from \"./state/initial-state\";\nimport actions from \"./state/actions\";\nimport rootReducer from \"./state/root-reducer\";\nimport VideoPlayer from \"./components/VideoPlayer\";\nimport videoData from \"./video-data.json\";\nimport { Navbar } from \"./components/Navbar\";\nimport { BiCameraMovie } from \"react-icons/bi\";\n\nfunction App() {\n  const [state, dispatch] = useReducer(rootReducer, initialState);\n  const {\n    player: {\n      videoSelected,\n      videos\n    }\n  } = state;\n  useEffect(() => {\n    dispatch({\n      type: actions.HYDRATE_VIDEO_DATA,\n      payload: videoData.videos\n    });\n  }, []);\n  console.log(videos[videoSelected].name && videos[videoSelected].name);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"TouchTribe Videos \", /*#__PURE__*/React.createElement(BiCameraMovie, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(VideoPlayer, {\n    dispatch: dispatch,\n    videoSelected: videoSelected,\n    videos: videos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/stevenvisser/code/stevenvssr/Projects/coding-challange/src/App.js"],"names":["React","useEffect","useReducer","initialState","actions","rootReducer","VideoPlayer","videoData","Navbar","BiCameraMovie","App","state","dispatch","player","videoSelected","videos","type","HYDRATE_VIDEO_DATA","payload","console","log","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAO,WAAP;AACA,OAAO,kCAAP;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,aAAT,QAA8B,gBAA9B;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAACG,WAAD,EAAcF,YAAd,CAApC;AACA,QAAM;AACJU,IAAAA,MAAM,EAAE;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB;AADJ,MAEFJ,KAFJ;AAIAV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEZ,OAAO,CAACa,kBADP;AAEPC,MAAAA,OAAO,EAAEX,SAAS,CAACQ;AAFZ,KAAD,CAAR;AAID,GALQ,EAKN,EALM,CAAT;AAOAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACD,aAAD,CAAN,CAAsBO,IAAtB,IAA8BN,MAAM,CAACD,aAAD,CAAN,CAAsBO,IAAhE;AAEA,sBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCACoB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADpB,CADF,CADF,eAME,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAET,QADZ;AAEE,IAAA,aAAa,EAAEE,aAFjB;AAGE,IAAA,MAAM,EAAEC,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAcD;;AAED,eAAeL,GAAf","sourcesContent":["import React, { useEffect, useReducer } from \"react\";\nimport \"./App.css\";\nimport \"video-react/dist/video-react.css\";\nimport initialState from \"./state/initial-state\";\nimport actions from \"./state/actions\";\nimport rootReducer from \"./state/root-reducer\";\nimport VideoPlayer from \"./components/VideoPlayer\";\nimport videoData from \"./video-data.json\";\nimport { Navbar } from \"./components/Navbar\";\nimport { BiCameraMovie } from \"react-icons/bi\";\n\nfunction App() {\n  const [state, dispatch] = useReducer(rootReducer, initialState);\n  const {\n    player: { videoSelected, videos },\n  } = state;\n\n  useEffect(() => {\n    dispatch({\n      type: actions.HYDRATE_VIDEO_DATA,\n      payload: videoData.videos,\n    });\n  }, []);\n\n  console.log(videos[videoSelected].name && videos[videoSelected].name);\n\n  return (\n    <>\n      <Navbar>\n        <h2>\n          TouchTribe Videos <BiCameraMovie />\n        </h2>\n      </Navbar>\n      <VideoPlayer\n        dispatch={dispatch}\n        videoSelected={videoSelected}\n        videos={videos}\n      />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}